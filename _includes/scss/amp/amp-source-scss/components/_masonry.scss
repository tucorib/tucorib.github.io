@if $enable-amp-masonry {
	.masonry {
		column-count: 0;
		column-gap: 0;
		counter-reset: brick-counter;
		
		@include media-breakpoint-up(sm) {
			column-count: $masonry-columns-count-sm;
		}
		
		@include media-breakpoint-up(md) {
			column-count: $masonry-columns-count-md;
		}
		
		@include media-breakpoint-up(lg) {
			column-count: $masonry-columns-count-lg;
		}
		
		@include media-breakpoint-up(xl) {
			column-count: $masonry-columns-count-xl;
		}
	}
	
	.brick {
		box-sizing: border-box;
		break-inside: avoid;
		counter-increment: brick-counter;
		
		&-content {
			position: relative;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-bricks: center;
			height: 220px;;
			box-sizing: border-box;
			background-color: $primary;
			border: $border-width-thin $border-style-solid darken($primary, 5);
	
			&:before {
				position: absolute;
				top: 0;
				left: 0;
				width: 2em;
				height: 2em;
				line-height: 2em;
				text-align: center;
				font-weight: bold;
				content: counter(brick-counter);
				color: $light;
				background-color: $dark;
			}
	
			&:after {
				color: darken(red, 10%);
			}
	
			&-small {
				height: 100px;
				background-color: $primary;
			}
	
			&-medium {
				height: 175px;
				background-color: $primary;
			}
	
			&-large {
				height: 280px;
				background-color: $primary;
			}
		}
	}
	
	@if $enable-amp-masonry-images {
		.img-masonry {
			width: 100%;
			height: 100%;
			padding-left: ($amp-grid-gutter-width / 2);
			padding-right: ($amp-grid-gutter-width / 2);
			object-fit: cover;
			
			@if $enable-amp-masonry-images-ng {
				&-ng {
					padding-left: 0;
					padding-right: 0;
				}
			}
		}
	}
}